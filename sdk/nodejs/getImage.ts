// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Holds details on Images and apps available when configuring a server. Matches https://developers.bitlaunch.io/reference/host-image-object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitlaunch from "@pulumi/bitlaunch";
 *
 * const config = new pulumi.Config();
 * const token = config.requireObject("token");
 * const example = bitlaunch.getImage({
 *     host: "DigitalOcean",
 *     distroName: "Ubuntu",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getImage(args: GetImageArgs, opts?: pulumi.InvokeOptions): Promise<GetImageResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bitlaunch:index/getImage:getImage", {
        "distroName": args.distroName,
        "host": args.host,
        "versionName": args.versionName,
    }, opts);
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageArgs {
    /**
     * The name of the Linux Distibution or one-click app.
     */
    distroName?: string;
    /**
     * Host Provider (DigitalOcean, Vultr, etc.)
     */
    host: string;
    /**
     * The Specific Image Version
     */
    versionName?: string;
}

/**
 * A collection of values returned by getImage.
 */
export interface GetImageResult {
    /**
     * The name of the Linux Distibution or one-click app.
     */
    readonly distroName?: string;
    /**
     * Extra monthly cost.
     */
    readonly extraCostPerMonth: number;
    /**
     * Host Provider (DigitalOcean, Vultr, etc.)
     */
    readonly host: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Flag to determine if the image is Windows-based.
     */
    readonly isWindows: boolean;
    /**
     * The minimum disk size available in GB.
     */
    readonly minDiskSize: number;
    /**
     * If setting a password is supported.
     */
    readonly passwordUnsupported: boolean;
    /**
     * The type of the image: image or app.
     */
    readonly type: string;
    /**
     * A list of unavailable subregion IDs.
     */
    readonly unavailableRegions: string[];
    /**
     * The Specific Image Version
     */
    readonly versionName?: string;
}
/**
 * Holds details on Images and apps available when configuring a server. Matches https://developers.bitlaunch.io/reference/host-image-object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitlaunch from "@pulumi/bitlaunch";
 *
 * const config = new pulumi.Config();
 * const token = config.requireObject("token");
 * const example = bitlaunch.getImage({
 *     host: "DigitalOcean",
 *     distroName: "Ubuntu",
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getImageOutput(args: GetImageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetImageResult> {
    return pulumi.output(args).apply((a: any) => getImage(a, opts))
}

/**
 * A collection of arguments for invoking getImage.
 */
export interface GetImageOutputArgs {
    /**
     * The name of the Linux Distibution or one-click app.
     */
    distroName?: pulumi.Input<string>;
    /**
     * Host Provider (DigitalOcean, Vultr, etc.)
     */
    host: pulumi.Input<string>;
    /**
     * The Specific Image Version
     */
    versionName?: pulumi.Input<string>;
}
