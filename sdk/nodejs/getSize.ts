// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Holds details on available size configurations for a server. Matches https://developers.bitlaunch.io/reference/host-size-object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitlaunch from "@pulumi/bitlaunch";
 *
 * const config = new pulumi.Config();
 * const token = config.requireObject("token");
 * const example = bitlaunch.getSize({
 *     host: "DigitalOcean",
 *     cpuCount: 2,
 *     memoryMb: 2048,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSize(args: GetSizeArgs, opts?: pulumi.InvokeOptions): Promise<GetSizeResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("bitlaunch:index/getSize:getSize", {
        "cpuCount": args.cpuCount,
        "diskGb": args.diskGb,
        "host": args.host,
        "memoryMb": args.memoryMb,
    }, opts);
}

/**
 * A collection of arguments for invoking getSize.
 */
export interface GetSizeArgs {
    /**
     * The amount of vCPU's included.
     */
    cpuCount?: number;
    /**
     * The amount of disk space included.
     */
    diskGb?: number;
    /**
     * Host Provider (DigitalOcean, Vultr, etc.)
     */
    host: string;
    /**
     * The amount of memory (RAM) included.
     */
    memoryMb?: number;
}

/**
 * A collection of values returned by getSize.
 */
export interface GetSizeResult {
    /**
     * The available monthly bandwidth in GB.
     */
    readonly bandwidthGb: number;
    /**
     * The amount of balance deducted per hour.
     */
    readonly costPerHour: number;
    /**
     * The amount in USD charged per month.
     */
    readonly costPerMonth: number;
    /**
     * The amount of vCPU's included.
     */
    readonly cpuCount?: number;
    /**
     * The amount of disk space included.
     */
    readonly diskGb?: number;
    /**
     * Details on disks included with the size.
     */
    readonly disks: outputs.GetSizeDisk[];
    /**
     * Host Provider (DigitalOcean, Vultr, etc.)
     */
    readonly host: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The amount of memory (RAM) included.
     */
    readonly memoryMb?: number;
    /**
     * Some hosts offer a different plan type for different usage. You should refer to the host documentation for more information.
     */
    readonly planType: string;
    /**
     * A human readable string.
     */
    readonly slug: string;
}
/**
 * Holds details on available size configurations for a server. Matches https://developers.bitlaunch.io/reference/host-size-object
 *
 * ## Example Usage
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as bitlaunch from "@pulumi/bitlaunch";
 *
 * const config = new pulumi.Config();
 * const token = config.requireObject("token");
 * const example = bitlaunch.getSize({
 *     host: "DigitalOcean",
 *     cpuCount: 2,
 *     memoryMb: 2048,
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 */
export function getSizeOutput(args: GetSizeOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSizeResult> {
    return pulumi.output(args).apply((a: any) => getSize(a, opts))
}

/**
 * A collection of arguments for invoking getSize.
 */
export interface GetSizeOutputArgs {
    /**
     * The amount of vCPU's included.
     */
    cpuCount?: pulumi.Input<number>;
    /**
     * The amount of disk space included.
     */
    diskGb?: pulumi.Input<number>;
    /**
     * Host Provider (DigitalOcean, Vultr, etc.)
     */
    host: pulumi.Input<string>;
    /**
     * The amount of memory (RAM) included.
     */
    memoryMb?: pulumi.Input<number>;
}
