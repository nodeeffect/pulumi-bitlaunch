// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bitlaunch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/webwarrior-ws/pulumi-bitlaunch/sdk/go/bitlaunch/internal"
)

// Holds details on available size configurations for a server. Matches https://developers.bitlaunch.io/reference/host-size-object
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//	"github.com/webwarrior-ws/pulumi-bitlaunch/sdk/go/bitlaunch"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			token := cfg.RequireObject("token")
//			_, err := bitlaunch.GetSize(ctx, &bitlaunch.GetSizeArgs{
//				Host:     "DigitalOcean",
//				CpuCount: pulumi.IntRef(2),
//				MemoryMb: pulumi.IntRef(2048),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetSize(ctx *pulumi.Context, args *GetSizeArgs, opts ...pulumi.InvokeOption) (*GetSizeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSizeResult
	err := ctx.Invoke("bitlaunch:index/getSize:getSize", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSize.
type GetSizeArgs struct {
	// The amount of vCPU's included.
	CpuCount *int `pulumi:"cpuCount"`
	// The amount of disk space included.
	DiskGb *int `pulumi:"diskGb"`
	// Host Provider (DigitalOcean, Vultr, etc.)
	Host string `pulumi:"host"`
	// The amount of memory (RAM) included.
	MemoryMb *int `pulumi:"memoryMb"`
}

// A collection of values returned by getSize.
type GetSizeResult struct {
	// The available monthly bandwidth in GB.
	BandwidthGb int `pulumi:"bandwidthGb"`
	// The amount of balance deducted per hour.
	CostPerHour int `pulumi:"costPerHour"`
	// The amount in USD charged per month.
	CostPerMonth int `pulumi:"costPerMonth"`
	// The amount of vCPU's included.
	CpuCount *int `pulumi:"cpuCount"`
	// The amount of disk space included.
	DiskGb *int `pulumi:"diskGb"`
	// Details on disks included with the size.
	Disks []GetSizeDisk `pulumi:"disks"`
	// Host Provider (DigitalOcean, Vultr, etc.)
	Host string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The amount of memory (RAM) included.
	MemoryMb *int `pulumi:"memoryMb"`
	// Some hosts offer a different plan type for different usage. You should refer to the host documentation for more information.
	PlanType string `pulumi:"planType"`
	// A human readable string.
	Slug string `pulumi:"slug"`
}

func GetSizeOutput(ctx *pulumi.Context, args GetSizeOutputArgs, opts ...pulumi.InvokeOption) GetSizeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSizeResult, error) {
			args := v.(GetSizeArgs)
			r, err := GetSize(ctx, &args, opts...)
			var s GetSizeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSizeResultOutput)
}

// A collection of arguments for invoking getSize.
type GetSizeOutputArgs struct {
	// The amount of vCPU's included.
	CpuCount pulumi.IntPtrInput `pulumi:"cpuCount"`
	// The amount of disk space included.
	DiskGb pulumi.IntPtrInput `pulumi:"diskGb"`
	// Host Provider (DigitalOcean, Vultr, etc.)
	Host pulumi.StringInput `pulumi:"host"`
	// The amount of memory (RAM) included.
	MemoryMb pulumi.IntPtrInput `pulumi:"memoryMb"`
}

func (GetSizeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeArgs)(nil)).Elem()
}

// A collection of values returned by getSize.
type GetSizeResultOutput struct{ *pulumi.OutputState }

func (GetSizeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizeResult)(nil)).Elem()
}

func (o GetSizeResultOutput) ToGetSizeResultOutput() GetSizeResultOutput {
	return o
}

func (o GetSizeResultOutput) ToGetSizeResultOutputWithContext(ctx context.Context) GetSizeResultOutput {
	return o
}

// The available monthly bandwidth in GB.
func (o GetSizeResultOutput) BandwidthGb() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizeResult) int { return v.BandwidthGb }).(pulumi.IntOutput)
}

// The amount of balance deducted per hour.
func (o GetSizeResultOutput) CostPerHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizeResult) int { return v.CostPerHour }).(pulumi.IntOutput)
}

// The amount in USD charged per month.
func (o GetSizeResultOutput) CostPerMonth() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizeResult) int { return v.CostPerMonth }).(pulumi.IntOutput)
}

// The amount of vCPU's included.
func (o GetSizeResultOutput) CpuCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSizeResult) *int { return v.CpuCount }).(pulumi.IntPtrOutput)
}

// The amount of disk space included.
func (o GetSizeResultOutput) DiskGb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSizeResult) *int { return v.DiskGb }).(pulumi.IntPtrOutput)
}

// Details on disks included with the size.
func (o GetSizeResultOutput) Disks() GetSizeDiskArrayOutput {
	return o.ApplyT(func(v GetSizeResult) []GetSizeDisk { return v.Disks }).(GetSizeDiskArrayOutput)
}

// Host Provider (DigitalOcean, Vultr, etc.)
func (o GetSizeResultOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeResult) string { return v.Host }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSizeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeResult) string { return v.Id }).(pulumi.StringOutput)
}

// The amount of memory (RAM) included.
func (o GetSizeResultOutput) MemoryMb() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSizeResult) *int { return v.MemoryMb }).(pulumi.IntPtrOutput)
}

// Some hosts offer a different plan type for different usage. You should refer to the host documentation for more information.
func (o GetSizeResultOutput) PlanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeResult) string { return v.PlanType }).(pulumi.StringOutput)
}

// A human readable string.
func (o GetSizeResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizeResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSizeResultOutput{})
}
