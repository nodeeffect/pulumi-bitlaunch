# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetSizeResult',
    'AwaitableGetSizeResult',
    'get_size',
    'get_size_output',
]

@pulumi.output_type
class GetSizeResult:
    """
    A collection of values returned by getSize.
    """
    def __init__(__self__, bandwidth_gb=None, cost_per_hour=None, cost_per_month=None, cpu_count=None, disk_gb=None, disks=None, host=None, id=None, memory_mb=None, plan_type=None, slug=None):
        if bandwidth_gb and not isinstance(bandwidth_gb, int):
            raise TypeError("Expected argument 'bandwidth_gb' to be a int")
        pulumi.set(__self__, "bandwidth_gb", bandwidth_gb)
        if cost_per_hour and not isinstance(cost_per_hour, int):
            raise TypeError("Expected argument 'cost_per_hour' to be a int")
        pulumi.set(__self__, "cost_per_hour", cost_per_hour)
        if cost_per_month and not isinstance(cost_per_month, int):
            raise TypeError("Expected argument 'cost_per_month' to be a int")
        pulumi.set(__self__, "cost_per_month", cost_per_month)
        if cpu_count and not isinstance(cpu_count, int):
            raise TypeError("Expected argument 'cpu_count' to be a int")
        pulumi.set(__self__, "cpu_count", cpu_count)
        if disk_gb and not isinstance(disk_gb, int):
            raise TypeError("Expected argument 'disk_gb' to be a int")
        pulumi.set(__self__, "disk_gb", disk_gb)
        if disks and not isinstance(disks, list):
            raise TypeError("Expected argument 'disks' to be a list")
        pulumi.set(__self__, "disks", disks)
        if host and not isinstance(host, str):
            raise TypeError("Expected argument 'host' to be a str")
        pulumi.set(__self__, "host", host)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if memory_mb and not isinstance(memory_mb, int):
            raise TypeError("Expected argument 'memory_mb' to be a int")
        pulumi.set(__self__, "memory_mb", memory_mb)
        if plan_type and not isinstance(plan_type, str):
            raise TypeError("Expected argument 'plan_type' to be a str")
        pulumi.set(__self__, "plan_type", plan_type)
        if slug and not isinstance(slug, str):
            raise TypeError("Expected argument 'slug' to be a str")
        pulumi.set(__self__, "slug", slug)

    @property
    @pulumi.getter(name="bandwidthGb")
    def bandwidth_gb(self) -> int:
        """
        The available monthly bandwidth in GB.
        """
        return pulumi.get(self, "bandwidth_gb")

    @property
    @pulumi.getter(name="costPerHour")
    def cost_per_hour(self) -> int:
        """
        The amount of balance deducted per hour.
        """
        return pulumi.get(self, "cost_per_hour")

    @property
    @pulumi.getter(name="costPerMonth")
    def cost_per_month(self) -> int:
        """
        The amount in USD charged per month.
        """
        return pulumi.get(self, "cost_per_month")

    @property
    @pulumi.getter(name="cpuCount")
    def cpu_count(self) -> Optional[int]:
        """
        The amount of vCPU's included.
        """
        return pulumi.get(self, "cpu_count")

    @property
    @pulumi.getter(name="diskGb")
    def disk_gb(self) -> Optional[int]:
        """
        The amount of disk space included.
        """
        return pulumi.get(self, "disk_gb")

    @property
    @pulumi.getter
    def disks(self) -> Sequence['outputs.GetSizeDiskResult']:
        """
        Details on disks included with the size.
        """
        return pulumi.get(self, "disks")

    @property
    @pulumi.getter
    def host(self) -> str:
        """
        Host Provider (DigitalOcean, Vultr, etc.)
        """
        return pulumi.get(self, "host")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="memoryMb")
    def memory_mb(self) -> Optional[int]:
        """
        The amount of memory (RAM) included.
        """
        return pulumi.get(self, "memory_mb")

    @property
    @pulumi.getter(name="planType")
    def plan_type(self) -> str:
        """
        Some hosts offer a different plan type for different usage. You should refer to the host documentation for more information.
        """
        return pulumi.get(self, "plan_type")

    @property
    @pulumi.getter
    def slug(self) -> str:
        """
        A human readable string.
        """
        return pulumi.get(self, "slug")


class AwaitableGetSizeResult(GetSizeResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSizeResult(
            bandwidth_gb=self.bandwidth_gb,
            cost_per_hour=self.cost_per_hour,
            cost_per_month=self.cost_per_month,
            cpu_count=self.cpu_count,
            disk_gb=self.disk_gb,
            disks=self.disks,
            host=self.host,
            id=self.id,
            memory_mb=self.memory_mb,
            plan_type=self.plan_type,
            slug=self.slug)


def get_size(cpu_count: Optional[int] = None,
             disk_gb: Optional[int] = None,
             host: Optional[str] = None,
             memory_mb: Optional[int] = None,
             opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSizeResult:
    """
    Holds details on available size configurations for a server. Matches https://developers.bitlaunch.io/reference/host-size-object

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_bitlaunch as bitlaunch

    config = pulumi.Config()
    token = config.require_object("token")
    example = bitlaunch.get_size(host="DigitalOcean",
        cpu_count=2,
        memory_mb=2048)
    ```
    <!--End PulumiCodeChooser -->


    :param int cpu_count: The amount of vCPU's included.
    :param int disk_gb: The amount of disk space included.
    :param str host: Host Provider (DigitalOcean, Vultr, etc.)
    :param int memory_mb: The amount of memory (RAM) included.
    """
    __args__ = dict()
    __args__['cpuCount'] = cpu_count
    __args__['diskGb'] = disk_gb
    __args__['host'] = host
    __args__['memoryMb'] = memory_mb
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('bitlaunch:index/getSize:getSize', __args__, opts=opts, typ=GetSizeResult).value

    return AwaitableGetSizeResult(
        bandwidth_gb=pulumi.get(__ret__, 'bandwidth_gb'),
        cost_per_hour=pulumi.get(__ret__, 'cost_per_hour'),
        cost_per_month=pulumi.get(__ret__, 'cost_per_month'),
        cpu_count=pulumi.get(__ret__, 'cpu_count'),
        disk_gb=pulumi.get(__ret__, 'disk_gb'),
        disks=pulumi.get(__ret__, 'disks'),
        host=pulumi.get(__ret__, 'host'),
        id=pulumi.get(__ret__, 'id'),
        memory_mb=pulumi.get(__ret__, 'memory_mb'),
        plan_type=pulumi.get(__ret__, 'plan_type'),
        slug=pulumi.get(__ret__, 'slug'))


@_utilities.lift_output_func(get_size)
def get_size_output(cpu_count: Optional[pulumi.Input[Optional[int]]] = None,
                    disk_gb: Optional[pulumi.Input[Optional[int]]] = None,
                    host: Optional[pulumi.Input[str]] = None,
                    memory_mb: Optional[pulumi.Input[Optional[int]]] = None,
                    opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSizeResult]:
    """
    Holds details on available size configurations for a server. Matches https://developers.bitlaunch.io/reference/host-size-object

    ## Example Usage

    <!--Start PulumiCodeChooser -->
    ```python
    import pulumi
    import pulumi_bitlaunch as bitlaunch

    config = pulumi.Config()
    token = config.require_object("token")
    example = bitlaunch.get_size(host="DigitalOcean",
        cpu_count=2,
        memory_mb=2048)
    ```
    <!--End PulumiCodeChooser -->


    :param int cpu_count: The amount of vCPU's included.
    :param int disk_gb: The amount of disk space included.
    :param str host: Host Provider (DigitalOcean, Vultr, etc.)
    :param int memory_mb: The amount of memory (RAM) included.
    """
    ...
